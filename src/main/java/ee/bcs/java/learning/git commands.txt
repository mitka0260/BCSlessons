mkdir git-test3
cd git-test3
cd..
git init - создать репозиторий

git config --global user.name "mitka0260"
git config --global user.email "mitkaut@gmail.com"

git status
git add test.txt        гит будет отслеживать изменения в этом файле

чтобы гит игнорировал что-то, надо создать файл .gitignore
и в этом файле написать папки и файлы которые не надо отслеживать
.папка/*
*.class


git commit -m "lisasin test.txt faili"
git branch my_new_branch  - создать ветку
git branch              - перечислить какие ветки есть
git checkout my_new_branch  - перейти в эту ветку
git add *
git checkout master
git restore --staged test.txt
git branch -m "new_name"      переименование
git branch -d "old_branch"     стереть
git merge new_branch   - объеденить ветки (внести измненения из new_branch в мастер)

git log - история изменений

git diff <commit hash> <commit hash>    чем отличаются два коммита
git remote - какие есть удалённые репозитории
git push BCSlessons master
git tag "version1.0"


create a new repository on the command line:
echo "# BCSlessons" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/mitka0260/BCSlessons.git
git push -u origin main

or push an existing repository from the command line:
git remote add origin https://github.com/mitka0260/BCSlessons.git
git branch -M main
git push -u origin main

git push -u origin main

git clone https://github.com/siimrebane/java



Технология, которая позволяет отслеживать и записывать изменения в файлах
Основа гита - получение хеш-кода (=уникальное целое число)
Если файл меняется, то меняется и хеш-код. Если изменился, то эти изменения надо подтвердить/отменить.